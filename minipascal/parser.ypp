%{
    #include <iostream>
    #include <cstdlib>
    #include <vector>
    #include <string>
    #include <map>
    #include <string.h>
    
    #include "naredba.hpp"
    #include "izrazi.hpp"
    
    #define YYDEBUG 1
    
    using namespace std;
    
    void yyerror(string s){
        cerr<<s<<endl;
        exit(EXIT_FAILURE);
    }
    
    int yylex();
    
    map<string, int> tablica;
    
    int a;
%}

%union {
    int d;
    Izraz *i;
    Naredba *n;
    string *s;
    vector<Naredba*> *v;
}

%nonassoc ':'
%nonassoc inace_token
%left '<' '>'
%left '+' '-'
%left '*' '/' mod_token

%token pocetak_token kraj_token inace_token unesi_token dok_je_token
%token ispisi_token mod_token dodela_token ako_je_token onda_token
%token <d> num_token
%token <s> string_token id_token
%token radi_sledece_token

%type <i> E
%type <n> Naredba Blok
%type <v> NizNaredbi

%%
Program: Blok '.' {
    if(a==2)
        $1->izvrsi();
    else {
        $1->nazubi(0);
    }
    delete $1;
}
;

Blok: pocetak_token NizNaredbi kraj_token {
    $$ = new Blok(*$2);
    delete $2;
}
;

NizNaredbi: NizNaredbi ';' Naredba {
    $$ = $1;
    $$->push_back($3);
}
| Naredba {
    $$ = new vector<Naredba*>();
    $$->push_back($1);
}
;

Naredba: ispisi_token '(' E ')' {
    $$ = new IspisE($3);
}
| ispisi_token '(' string_token ')' {
    $$ = new IspisS(*$3);
    delete $3;
}
| id_token dodela_token E {
    $$ = new Dodela(*$1, $3);
    delete $1;
}
| ako_je_token E onda_token ':' Naredba inace_token ':' Naredba {
    $$ = new AkoJeOndaInace($2, $5, $8);
}
| ako_je_token E onda_token ':' Naredba {
    $$ = new AkoJeOnda($2, $5);
}
| unesi_token '(' id_token ')' {
    $$ = new Unesi(*$3);
    delete $3;
}
| dok_je_token E radi_sledece_token ':' Naredba {
    $$ = new DokJe($2, $5);
}
| Blok {
    $$ = $1;
}
;

E: E '+' E {
    $$ = new Zbir($1, $3);
}
| E '-' E {
    $$ = new Razlika($1, $3);
}
| E '*' E {
    $$ = new Proizvod($1, $3);
}
| E '/' E {
    $$ = new Kolicnik($1, $3);
}
| E mod_token E {
    $$ = new Mod($1, $3);
}
| E '>' E {
    $$ = new Vece($1, $3);
}
| E '<' E {
    $$ = new Manje($1, $3);
}
| '(' E ')' {
    $$ = $2;
}
| num_token {
    $$ = new Konstanta($1);
}
| id_token {
    $$ = new Promenljiva(*$1);
    delete $1;
}
;

%%

extern FILE *yyin;

int main(int argc, char **argv){

    //yydebug = 1;
    
    if(argc < 2 || argc > 3) {
        yyerror("Nepravilno pozivanje!");
    }
    
    if(argc == 2)
        yyin = fopen(argv[1], "r");
    else {
        if(strcmp(argv[1], "--nazubi") != 0)
            yyerror("Nepravilno pozivanje!");
        
        yyin = fopen(argv[2], "r");
    }
    
    a=argc;
    
    yyparse();
    
    fclose(yyin);
    
    return 0;
}